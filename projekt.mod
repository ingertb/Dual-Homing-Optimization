#-----------------------------------------------------------------------
#liczba węzły, łuki, zapotrzebowań oraz ścieżek:
#-----------------------------------------------------------------------
param Vn, integer, >= 2;  #liczba węzły
param En, integer, >= 0;  #liczba łuki
param Dn, integer, >= 0;  #liczba zapotrzebowań 
#-----------------------------------------------------------------------
#***********************************************************************
#-----------------------------------------------------------------------
#Indeksy:
#-----------------------------------------------------------------------
set V, default {1..Vn};
set E, default {1..En};
set D, default {1..Dn};
#-----------------------------------------------------------------------
#***********************************************************************
#-----------------------------------------------------------------------
#Stałe:
#-----------------------------------------------------------------------
param h{d in D} >= 0;  			    #Rozmiar zapotrzebowań
param K{e in E} >= 0; 			    #Koszt użyć
param s{d in D} >= 0;               #węzeł żródłowy 
param t{d in D} >= 0;               #węzeł docelowy   
param A{e in E, v in V}, >= 0, default 0; #rozpoczyna się w węzeł v
param B{e in E, v in V}, >= 0, default 0; #kończy się w węzeł v
#-----------------------------------------------------------------------
#***********************************************************************
#-----------------------------------------------------------------------
#Zmienne:
#-----------------------------------------------------------------------
var x{e in E, d in D} >= 0;    #Wielkość przepływności na ścieżki
var y{e in E} >= 0;            #Wielkość przepływności na łuki
#-----------------------------------------------------------------------
#***********************************************************************
#-----------------------------------------------------------------------
#Funkcja celu:
#-----------------------------------------------------------------------
minimize z: sum{e in E} (K[e]*y[e]);
#-----------------------------------------------------------------------
#***********************************************************************
#-----------------------------------------------------------------------
#Ograniczenia
#-----------------------------------------------------------------------
s.t. c1{d in D, v in V : v == s[d]} : sum{e in E} (A[e,v]*x[e,d] - B[e,v]*x[e,d]) = h[d];
s.t. c2{d in D, v in V : v != s[d] and v != t[d]} : sum{e in E} (A[e,v]*x[e,d] - B[e,v]*x[e,d]) = 0;
s.t. c3{d in D, v in V : v == t[d]} : sum{e in E} (A[e,v]*x[e,d] - B[e,v]*x[e,d]) = -h[d];
s.t. c4{e in E} : sum{d in D} x[e,d] = y[e];
#-----------------------------------------------------------------------
#***********************************************************************
#-----------------------------------------------------------------------	 
end;
#-----------------------------------------------------------------------
